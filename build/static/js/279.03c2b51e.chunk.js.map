{"version":3,"file":"static/js/279.03c2b51e.chunk.js","mappings":"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","sources":["components/Modals/editprofile/Editprofile.jsx","Pages/Profile/profile.jsx","components/Articlecard/articlecard.jsx","components/Topbar/topbar.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { GiCancel } from \"react-icons/gi\";\r\nimport \"./Editprofile.css\";\r\nimport { uploadImage, editProfile } from \"../../../api\";\r\n\r\nconst EditModal = (props) => {\r\n  const [isPhotoSelected, setIsPhotoSelected] = useState(false);\r\n  const [photo, setPhoto] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [firstName, setfirstName] = useState(\"\");\r\n  const [lastName, setlastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  // let imgUrl = \"\";\r\n\r\n  const handlePhotoChange = (e) => {\r\n    const selectedPhoto = e.target.files[0];\r\n    setPhoto(selectedPhoto);\r\n    setIsPhotoSelected(true);\r\n  };\r\n\r\n  console.log(props.userDataQuery.id)\r\n  const handlePhoto = async (e) => {\r\n    e.preventDefault();\r\n    if (photo) {\r\n      const imgUrl = await uploadImage(photo, photo.name, \"users\");\r\n      const dataObject = {\r\n        profilePicture : imgUrl\r\n      }\r\n      console.log(dataObject)\r\n      await editProfile(props.userDataQuery.id, dataObject);\r\n    }\r\n    props.onClose();\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    props.onClose();\r\n  };\r\n  // rendering profile picture component\r\n  if (props.isprofilepic) {\r\n    return (\r\n      <>\r\n        <div className=\"edit_profile_modal\">\r\n          <div className=\"modal_content_editprofile\">\r\n            <div className=\"edit_profile_top\">\r\n              <h4>{props.userDataQuery.username} is editing his profile</h4>\r\n              <button className=\"comment_cancel_button\" onClick={props.onClose}>\r\n                <GiCancel />\r\n              </button>\r\n            </div>\r\n            <form\r\n              className=\"edit_profile_form profile_pic_form\"\r\n              onSubmit={handlePhoto}\r\n            >\r\n              <label htmlFor=\"profileimg\">\r\n                <h4>{isPhotoSelected ? \"Update Photo\" : \"Add Photo\"}</h4>\r\n                <input\r\n                  id=\"profileimg\"\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={handlePhotoChange}\r\n                />\r\n              </label>\r\n              {photo && (\r\n                <img\r\n                  src={URL.createObjectURL(photo)}\r\n                  alt=\"Selected\"\r\n                  className=\"profile_edit_img\"\r\n                />\r\n              )}\r\n\r\n              <button type=\"submit\">Update</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  // rendering profile edit commponents excluding profile picture\r\n  return (\r\n    <>\r\n      <div className=\"edit_profile_modal\">\r\n        <div className=\"modal_content_editprofile\">\r\n          <div className=\"edit_profile_top\">\r\n            <h4>{props.userDataQuery.username} is editing his profile</h4>\r\n            <button className=\"comment_cancel_button\" onClick={props.onClose}>\r\n              <GiCancel />\r\n            </button>\r\n          </div>\r\n          <form className=\"edit_profile_form\" onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              value = {props.userDataQuery.username}\r\n              onChange={(e) => {\r\n                setUsername(e.target.value);\r\n              }}\r\n              placeholder=\"Username\"\r\n            />\r\n            <input type=\"text\" placeholder=\"Firstname\" />\r\n            <input type=\"text\" placeholder=\"Lastname\" />\r\n            <input type=\"email\" placeholder=\"Email\" />\r\n            <select name=\"year_select\" id=\"\">\r\n              <option value={props.userDataQuery.year}>select level</option>\r\n              <option value=\"foundation\">foundation</option>\r\n              <option value=\"year 1\">year 1</option>\r\n              <option value=\"year 2\">year 2</option>\r\n              <option value=\"year 3\">year 3 </option>\r\n            </select>\r\n            <select name=\"program_select\" id=\"\">\r\n              <option value={props.userDataQuery.program}>select program</option>\r\n              <option value=\"Computer Science\">Computer Science</option>\r\n              <option value=\"Law\">Law</option>\r\n              <option value=\"Business Management\">Business Management</option>\r\n              <option value=\"Accounting\">Accounting</option>\r\n              <option value=\"International Relations\">\r\n                International Relations\r\n              </option>\r\n            </select>\r\n\r\n            <button type=\"submit\">Update</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditModal;\r\n","import React, { memo, useCallback, useState, useEffect} from \"react\";\r\nimport Articlecard from \"../../components/Articlecard/articlecard\";\r\nimport \"./profile.css\";\r\nimport profile_img2 from \"../../images/profilevactor.jpg\";\r\nimport Topbar from \"../../components/Topbar/topbar\";\r\nimport { CiCamera } from \"react-icons/ci\";\r\nimport { Logout, fetchUserData, fetchuserArticles } from \"../../api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../features/users\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport EditModal from \"../../components/Modals/editprofile/Editprofile\";\r\nimport Loading from \"../../components/Modals/loadingmodal/loading\";\r\n\r\nconst Profile = memo(() => \r\n{\r\n    const userIdString =  localStorage.getItem(\"user\").replace(/\"/g, \"\"); //getting user info from the localstorage;\r\n    const location = useLocation();\r\n    const userProfileId = location.pathname.split(\"/\")[2];\r\n    const rightUser = userIdString === userProfileId;\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [isprofilepic, setIsprofilepic] = useState(false);\r\n    const [userDataQuery, setUserDataQuery] = useState([])\r\n    const [img, setImg] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const [on, setOn] = useState(false);\r\n\r\n    const handleImg = (e) =>{\r\n        setImg(e.target.value);\r\n    }\r\nuseEffect(()=>{\r\n  const userDataProfile = async() =>{\r\n    const user = await fetchUserData(userIdString);\r\n    setUserDataQuery({...user, id: userIdString});\r\n  }\r\n  userDataProfile();\r\n}, [])\r\n\r\nconst userArticleQuery = []\r\n\r\n  const handleLogout = useCallback(() => {\r\n    dispatch(logout());\r\n    Logout();\r\n  }, [dispatch]);\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n    setIsprofilepic(false);\r\n  };\r\n\r\n  const handleProfilePic = () => {\r\n    setIsModalOpen(true);\r\n    setIsprofilepic(true);\r\n  };\r\n\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //// submition logic control section\r\n\r\n\r\n  //   closeModal(); // Close the modal after form submission\r\n  // };\r\n\r\n\r\n\r\n\r\n  if ( userDataQuery.length < 0)\r\n  {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"profile_page\">\r\n        <Topbar \r\n        logoutClick={handleLogout} \r\n        profile={true} \r\n        profilepic={userDataQuery.profilePicture}\r\n        />\r\n        <div className=\"profile_first_half\">\r\n          <div className=\"profile_img\">\r\n            {userDataQuery.profilePicture ? <img src={userDataQuery.profilePicture} alt=\"profile\" /> :\r\n            <img src={profile_img2} alt=\"profile\" />\r\n            }\r\n            {rightUser && <CiCamera className=\"profile_img_update\" onClick={handleProfilePic}/>}\r\n          \r\n          </div>\r\n            <h2>{userDataQuery.username}</h2>\r\n          <ul>\r\n            <li>{userArticleQuery.length} contributed articles</li>\r\n            {rightUser && <li className=\"profile_edit_btn\" onClick={openModal}>\r\n              <span onClick={openModal}>Edit profile</span>\r\n            </li>}\r\n          </ul>\r\n        </div>\r\n        {isModalOpen && <EditModal \r\n            isOpen={isModalOpen}\r\n            onClose={() => setIsModalOpen(false)} \r\n            userDataQuery = {userDataQuery}  \r\n            isprofilepic = {isprofilepic} \r\n        />}\r\n        <div className=\"profile_second_half\">\r\n          <div className=\"profile_toggle_row\">\r\n            <button className={on ? \"not_clicked\" : \"clicked\"} onClick={() => setOn(false)}>\r\n              ARTICLES\r\n            </button>\r\n            {rightUser && <button className={on ? \"clicked\" : \"not_clicked\"} onClick={() => setOn(true)}>\r\n              SAVED\r\n            </button>}\r\n          </div>\r\n\r\n          {on ? (\r\n            <div className=\"profile_art_contain\">\r\n              {userDataQuery.savedArticles && userDataQuery.savedArticles.length > 0 ?\r\n                userDataQuery.savedArticles.map((data) => <Articlecard key={data.id} articles={data} />) :\r\n                (<p className=\"profile_no_data\">You have no saved posts</p>)\r\n              }\r\n            </div>\r\n          ) : (\r\n            <div className=\"profile_art_contain\">\r\n              {userArticleQuery && userArticleQuery.length > 0 ?\r\n                userArticleQuery.map((data) => <Articlecard key={data.id} articles={data} />) :\r\n                (<p className=\"profile_no_data\">No articles contributed yet.. visit write to start writting</p>)\r\n                }\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Profile;\r\n","import \"./articlecard.css\";\r\nimport { FaRegSave, FaShareSquare } from \"react-icons/fa\";\r\nimport { BiSolidEditAlt, BiLike } from \"react-icons/bi\";\r\nimport { MdDeleteForever } from \"react-icons/md\";\r\nimport { AiFillLike } from \"react-icons/ai\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { memo, useEffect, useState } from \"react\";\r\nimport profile_img from \"../../images/profilevactor.jpg\";\r\nimport article_img from \"../../images/articlepic.jpg\";\r\nimport {\r\n  deleteArticle,\r\n  getLikes,\r\n  handleLikeClick,\r\n  saveArticle,\r\n} from \"../../api\";\r\nimport { useDispatch } from \"react-redux/\";\r\nimport { update } from \"../../features/article\";\r\nimport moment from \"moment\";\r\n\r\nconst Articlecard = memo(\r\n  (\r\n    { articles } ///memoizing this component, so that it will remember the props that changes to prevent unneccesary rerendering\r\n  ) => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const userdatastring = localStorage.getItem(\"user\");\r\n    const user = JSON.parse(userdatastring);\r\n    const rightUser = user._id === articles.authorId;\r\n    const [likes, setLikes] = useState(0);\r\n    const [liked, setLiked] = useState(false);\r\n    const [flagged, setFlaged] = useState(\"Not Flagged\");\r\n\r\n    useEffect(() => {\r\n      if (articles.id !== undefined) {\r\n        const fetchData = async () => {\r\n          try {\r\n            // const likesData = await getLikes(articles._id);\r\n\r\n            // setLikes(likesData.likes);\r\n            // setLiked(likesData.liked);\r\n          } catch (error) {\r\n            throw error;\r\n          }\r\n        };\r\n        fetchData();\r\n      }\r\n    }, [articles.id]);\r\n\r\n    async function handleLikes() {\r\n      if (liked) {\r\n        setLikes(likes - 1);\r\n        setLiked(!liked);\r\n      } else {\r\n        setLikes(likes + 1);\r\n        setLiked(!liked);\r\n      }\r\n\r\n      const ans = await handleLikeClick(articles._id);\r\n      setLiked(ans.liked);\r\n      setLikes(ans.likes);\r\n    }\r\n\r\n    function handleDelete() {\r\n      deleteArticle(articles._id);\r\n    }\r\n\r\n    function handleSave() {\r\n      saveArticle(articles._id);\r\n    }\r\n\r\n    function handleUpdate() {\r\n      dispatch(\r\n        update({\r\n          id: articles._id,\r\n          title: articles.title,\r\n          body: articles.body,\r\n          timeTakenToReadPost: articles.timeTakenToReadPost,\r\n          description: articles.description,\r\n          categories: articles.categories[0],\r\n          isUpdate: true,\r\n        })\r\n      );\r\n      navigate(\"/writepage\");\r\n    }\r\n\r\n    function handleFlagg() {\r\n      if (flagged === \"Flagged\") setFlaged(\"Not Flagged\");\r\n      else if (flagged === \"Not Flagged\") setFlaged(\"Flagged\");\r\n    }\r\n    // {moment(articles.created_at).format('MMMM Do, YYYY')}\r\n    console.log(articles.created_at.seconds)\r\n    return (\r\n      <>\r\n        <div className=\"article_post\">\r\n          <div id=\"article_card_wrapper\">\r\n            <div className=\"article_card_about\">\r\n              <ul>\r\n                <Link\r\n                  to={`/profile/${articles.authorId}`}\r\n                  className=\"article_card_linker\"\r\n                >\r\n                  <li>\r\n                    {articles.authorProfile ? (\r\n                      <img\r\n                        src={articles.authorProfile}\r\n                        alt=\"\"\r\n                      />\r\n                    ) : (\r\n                      <img src={profile_img} alt=\"profile\" />\r\n                    )}{\" \"}\r\n                    <span>{articles.author}</span>\r\n                  </li>\r\n                </Link>\r\n                <li>\r\n                  {moment(articles.created_at.toDate()).fromNow()}\r\n                </li>\r\n                <li className=\"show_on\">\r\n                  {articles.timeTakenToReadPost} min read\r\n                </li>\r\n                <li className=\"show_on\">{flagged}</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"article_card_mid\">\r\n              <div className=\"letter_part\">\r\n                <Link\r\n                  className=\"article_card_linker\"\r\n                  to={`/article/${articles.id}`}\r\n                >\r\n                  <h2>{articles.title}</h2>\r\n                </Link>\r\n                <p>{articles.description}</p>\r\n              </div>\r\n              <div className=\"img_part\">\r\n                {articles.descPhoto !== null ? (\r\n                  <img\r\n                    src={articles.descPhoto}\r\n                    alt=\"article_img_blob\"\r\n                  />\r\n                ) : (\r\n                  <img src={article_img} alt=\"default_img\" />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"article_reactions\">\r\n              <ul>\r\n                <li>\r\n                  <span className=\"card_topic\">{articles.categories}</span>\r\n                </li>\r\n                <li>\r\n                  <span className=\"show_of\">\r\n                    {articles.timeTakenToReadPost} min read\r\n                  </span>\r\n                </li>\r\n                <li>\r\n                  <span className=\"show_of\">{flagged}</span>\r\n                </li>\r\n                <li>{likes} likes</li>\r\n              </ul>\r\n              <ul>\r\n                {/* {<a href=\"/\"><FaShareSquare className=\"article_card_icons hvr-float-shadow\"/></a>  } */}\r\n                {liked ? (\r\n                  <li>\r\n                    <AiFillLike\r\n                      onClick={handleLikes}\r\n                      className=\"article_card_icons hvr-float-shadow\"\r\n                    />\r\n                  </li>\r\n                ) : (\r\n                  <li>\r\n                    <BiLike\r\n                      onClick={handleLikes}\r\n                      className=\"article_card_icons hvr-float-shadow\"\r\n                    />\r\n                  </li>\r\n                )}\r\n                {!rightUser && (\r\n                  <li>\r\n                    <FaRegSave\r\n                      onClick={handleSave}\r\n                      className=\"article_card_icons hvr-float-shadow\"\r\n                    />\r\n                  </li>\r\n                )}\r\n                {rightUser && (\r\n                  <li>\r\n                    <MdDeleteForever\r\n                      onClick={handleDelete}\r\n                      className=\"article_card_icons hvr-float-shadow\"\r\n                    />\r\n                  </li>\r\n                )}\r\n                {rightUser && (\r\n                  <li>\r\n                    <BiSolidEditAlt\r\n                      onClick={handleUpdate}\r\n                      className=\"article_card_icons hvr-float-shadow\"\r\n                    />\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Articlecard;\r\n","import React, { memo, useCallback, useEffect, useState } from \"react\";\r\nimport \"./topbar.css\";\r\nimport image1 from \"../../images/image1.png\";\r\nimport image2 from \"../../images/profilevactor.jpg\";\r\nimport { IoBookOutline } from \"react-icons/io5\";\r\n// import { IoIosNotifications } from \"react-icons/io\";\r\nimport {\r\n  TbLayoutSidebarLeftCollapseFilled,\r\n  TbLayoutSidebarLeftExpandFilled,\r\n} from \"react-icons/tb\";\r\nimport { FaSun } from \"react-icons/fa\";\r\nimport { FaMoon } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchUserData } from \"../../api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateTheme } from \"../../features/theme\";\r\n\r\nconst Topbar = memo((props) => {\r\n  const [userinfo, setUserInfo] = useState({});\r\n  const [dark, setdarkMode] = useState(false);\r\n\r\n  const dispach = useDispatch();\r\n  // css classes specification\r\n  const topbarClasses = [\r\n    \"topbar\",\r\n    props.showBottomBoxShadow ? \"bottom-box-shadow\" : \"\",\r\n  ].join(\" \");\r\n\r\n  const userid = localStorage.getItem(\"user\").replace(/\"/g, \"\"); //getting user info from the localstorage\r\n  // const user = JSON.parse(userString);\r\n  useEffect(() => {\r\n    const userDataFromBackend = async () => {\r\n      const ans = await fetchUserData(userid);\r\n      setUserInfo(ans);\r\n    };\r\n\r\n    userDataFromBackend();\r\n  }, []);\r\n\r\n  // taking care of changing themes\r\n\r\n  const handleBgChange = () => {\r\n    if (dark) {\r\n      dispach(updateTheme(dark));\r\n    } else {\r\n      dispach(updateTheme(dark));\r\n    }\r\n  };\r\n\r\n  const handleThemeClick = () => {\r\n    setdarkMode(!dark);\r\n    handleBgChange();\r\n  };\r\n\r\n  return (\r\n    <section className={topbarClasses}>\r\n      <div className=\"container\">\r\n        <div className=\"logo-1\">\r\n          <Link to=\"/dashboard\">\r\n            <img className=\"img1\" src={image1} alt=\"lancaster-logo\" />\r\n          </Link>\r\n          {props.showText ? (\r\n            <span className=\"logo-text\">{props.logoText}</span>\r\n          ) : (\r\n            <Link to=\"/dashboard\" className=\"home_link\">\r\n              <span className=\"logo-text other_small\">\r\n                Scholar<span className=\"colored_part\">Scribe</span>\r\n              </span>\r\n            </Link>\r\n          )}\r\n        </div>\r\n        <ul className=\"navbar\">\r\n          {props.showButton ? (\r\n            <li>\r\n              <button\r\n                className=\"publish-button hvr-wobble-top\"\r\n                onClick={props.publishClick}\r\n              >\r\n                Publish\r\n              </button>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/writepage\" className=\"write\">\r\n                <IoBookOutline className=\"write_icon\" />\r\n                <span className=\"write_link hvr-wobble-top\">Write</span>\r\n              </Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            {/* <div className=\"notification\">\r\n              <IoIosNotifications className=\"notification-icon hvr-pulse-shrink\" />\r\n              <span>5</span>\r\n            </div> */}\r\n            <div className=\"bg__change\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"checkbox\"\r\n                className=\"checkbox\"\r\n                onClick={handleThemeClick}\r\n              />\r\n              <label for=\"checkbox\" className=\"checkbox__label\">\r\n                <FaMoon className=\"fa-moon\" />\r\n                <FaSun className=\"fa-sun\" />\r\n                <span className=\"check__ball\" onClick={handleThemeClick}></span>\r\n              </label>\r\n            </div>\r\n          </li>\r\n          {!props.profile ? (\r\n            <li>\r\n              <Link to={`/profile/${userid}`}>\r\n                {!userinfo.profilePicture ? (\r\n                  <img className=\"img4\" src={image2} alt=\"\" />\r\n                ) : (\r\n                  <img\r\n                    className=\"img4\"\r\n                    src={userinfo.profilePicture}\r\n                    alt=\"\"\r\n                  />\r\n                )}\r\n              </Link>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/\">\r\n                <button\r\n                  className=\"publish-button hvr-wobble-top\"\r\n                  onClick={props.logoutClick}\r\n                >\r\n                  Logout\r\n                </button>\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n      {!props.sidebar\r\n        ? props.showBottomBoxShadow && (\r\n            <TbLayoutSidebarLeftExpandFilled\r\n              className=\"topbar_panel\"\r\n              onClick={props.sideBarHandle}\r\n            />\r\n          )\r\n        : props.showBottomBoxShadow && (\r\n            <TbLayoutSidebarLeftCollapseFilled\r\n              className=\"topbar_panel\"\r\n              onClick={props.sideBarHandle}\r\n            />\r\n          )}\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default Topbar;\r\n"],"names":["props","isPhotoSelected","setIsPhotoSelected","useState","photo","setPhoto","username","setUsername","firstName","setfirstName","lastName","setlastName","email","setEmail","handlePhotoChange","e","selectedPhoto","target","files","console","log","userDataQuery","id","handlePhoto","async","preventDefault","dataObject","profilePicture","uploadImage","name","editProfile","onClose","window","location","reload","isprofilepic","_jsx","_Fragment","children","className","_jsxs","onClick","GiCancel","onSubmit","htmlFor","type","accept","onChange","src","URL","createObjectURL","alt","value","placeholder","year","program","memo","userIdString","localStorage","getItem","replace","userProfileId","useLocation","pathname","split","rightUser","isModalOpen","setIsModalOpen","setIsprofilepic","setUserDataQuery","img","setImg","dispatch","useDispatch","on","setOn","useEffect","user","fetchUserData","userDataProfile","userArticleQuery","handleLogout","useCallback","logout","Logout","openModal","length","Loading","Topbar","logoutClick","profile","profilepic","profile_img2","CiCamera","handleProfilePic","EditModal","isOpen","savedArticles","map","data","Articlecard","articles","_ref","navigate","useNavigate","userdatastring","JSON","parse","_id","authorId","likes","setLikes","liked","setLiked","flagged","setFlaged","handleLikes","ans","handleLikeClick","undefined","fetchData","created_at","seconds","Link","to","concat","authorProfile","profile_img","author","moment","toDate","fromNow","timeTakenToReadPost","title","description","descPhoto","article_img","categories","AiFillLike","BiLike","FaRegSave","saveArticle","MdDeleteForever","deleteArticle","BiSolidEditAlt","update","body","isUpdate","userinfo","setUserInfo","dark","setdarkMode","dispach","topbarClasses","showBottomBoxShadow","join","userid","userDataFromBackend","handleThemeClick","updateTheme","image1","showText","logoText","showButton","publishClick","IoBookOutline","for","FaMoon","FaSun","image2","sidebar","TbLayoutSidebarLeftCollapseFilled","sideBarHandle","TbLayoutSidebarLeftExpandFilled"],"sourceRoot":""}