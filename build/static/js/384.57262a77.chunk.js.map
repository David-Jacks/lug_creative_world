{"version":3,"file":"static/js/384.57262a77.chunk.js","mappings":"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","sources":["components/Modals/PublishModal/PublishModal.jsx","Pages/Writepage/Writepage.jsx","components/Articletext/articletext.jsx","components/Topbar/topbar.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { GiCancel } from \"react-icons/gi\";\r\nimport \"./PublishModal.css\";\r\nimport { sendPostData, updateArticle } from \"../../../api\";\r\nimport Loading from \"../loadingmodal/loading\";\r\n\r\nconst PublishModal = (props) => {\r\n  const [descPhoto, setPhoto] = useState(null);\r\n  const [load, setLoad] = useState(false);\r\n  const [isPhotoSelected, setIsPhotoSelected] = useState(false);\r\n\r\n  const handlePhotoChange = (e) => {\r\n    const selectedPhoto = e.target.files[0];\r\n    setPhoto(selectedPhoto);\r\n    setIsPhotoSelected(true);\r\n  };\r\n  const {\r\n    title,\r\n    body,\r\n    author,\r\n    authorProfile,\r\n    description,\r\n    timeTakenToReadPost,\r\n    categories,\r\n    authorId,\r\n  } = props.transfer1;\r\n\r\n  const formData = {\r\n    title,\r\n    body,\r\n    description,\r\n    author,\r\n    authorProfile,\r\n    categories,\r\n    authorId,\r\n    timeTakenToReadPost,\r\n    descPhoto,\r\n    comments: {},\r\n    likes: {}\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!descPhoto) {\r\n      alert(\"Please you need to Illustrate with an image... Add Photo!!!\");\r\n    } else {\r\n      // Collect form data and pass it to the onProceed function\r\n      if (title && body && description) {\r\n        setLoad(true);\r\n        // if the user is updating the post control enters here\r\n        if (props.transfer2.isUpdate) {\r\n          const ans = await updateArticle(props.transfer2.id, formData);\r\n          if (ans) {\r\n            alert(\"updated successfully\");\r\n            props.onClose();\r\n            setLoad(false);\r\n          }\r\n        }// if the user posting an article control enters here\r\n        else {\r\n          const ans = await sendPostData(formData);\r\n          if (ans) {\r\n            alert(\"posted successfully\");\r\n            props.onClose();\r\n            setLoad(false);\r\n          }else{\r\n            alert(\"error posting\");\r\n            props.onClose();\r\n            setLoad(false);\r\n          }\r\n        }\r\n\r\n        props.onClose();\r\n        setLoad(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (load) {\r\n    return (\r\n      <div className=\"publish-modal\">\r\n        <Loading />;\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"publish-modal\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"publish-top\">\r\n          <h4>{props.author} is publishing</h4>\r\n          <button className=\"cancel-button\" onClick={props.onClose}>\r\n            <GiCancel />\r\n          </button>\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            <textarea\r\n              className=\"area\"\r\n              value={description}\r\n              onChange={props.handleDescChange}\r\n              required\r\n              placeholder=\"Make your post a magnet for readers! Just drop in a quick, captivating description (up to 50 Words) to draw them into your world effortlessly.\"\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            <select\r\n              className=\"box\"\r\n              value={categories}\r\n              onChange={props.handleCatChange}\r\n              required\r\n            >\r\n              <option value=\"\">Pick Category</option>\r\n              <option value=\"Student Business\">Business</option>\r\n              <option value=\"Lifestyle\">Lifestyle</option>\r\n              <option value=\"Health and wellness\">Health and wellness</option>\r\n              <option value=\"Comedy\">Academics</option>\r\n              <option value=\"Creative Writing\">Creative Writing</option>\r\n              <option value=\"Science and Technology\">\r\n                Science and Technology\r\n              </option>\r\n            </select>\r\n          </label>\r\n          <label>\r\n            <select\r\n              className=\"box\"\r\n              value={timeTakenToReadPost}\r\n              onChange={props.handleTimeTaken}\r\n              required\r\n            >\r\n              <option value=\"\">Specify Reading Time</option>\r\n              <option value=\"4\">Less Than 4 min</option>\r\n              <option value=\"7\">Less Than 7 min</option>\r\n              <option value=\"10\">Less Than 10 min</option>\r\n              <option value=\"2\">More Than 2 min</option>\r\n              <option value=\"5\">More Than 5 min</option>\r\n              <option value=\"8\">More Than 8 min</option>\r\n              <option value=\"12\">More Than 10 min</option>\r\n            </select>\r\n          </label>\r\n\r\n          <div className=\"articlePhotoHandle\">\r\n            <label className=\"file-input-label\">\r\n              <h4>{isPhotoSelected ? \"Update Photo\" : \"Add Photo\"}</h4>\r\n              <input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handlePhotoChange}\r\n              />\r\n            </label>\r\n            {descPhoto && (\r\n              <img\r\n                src={URL.createObjectURL(descPhoto)}\r\n                alt=\"Selected\"\r\n                className=\"articlePhotoPreview\"\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"proceed-button-container\">\r\n            <button type=\"submit\" className=\"proceed-button\">\r\n              Proceed\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PublishModal;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport \"./writepage.css\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport Topbar from \"../../components/Topbar/topbar\";\r\nimport ReactQuill from \"react-quill\";\r\n// import {  useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { preview } from \"../../features/article\";\r\nimport Articletext from \"../../components/Articletext/articletext\";\r\nimport { fetchUserData } from \"../../api\";\r\nimport PublishModal from \"../../components/Modals/PublishModal/PublishModal\";\r\n\r\nconst Writepage = () => {\r\n  const articleUpdateData = useSelector((state) => state.article.value);\r\n  const QuillRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  // const navigate = useNavigate();\r\n  const [title, setHeading] = useState(articleUpdateData.title);\r\n  const [description, setDesc] = useState(articleUpdateData.description);\r\n  const [body, setText] = useState(articleUpdateData.body);\r\n  const [timeTakenToReadPost, settimeTakenToReadPost] = useState(\r\n    articleUpdateData.timeTakenToReadPost\r\n  );\r\n  const [categories, setcategories] = useState(\"\");\r\n  const [reviewed, setReviewed] = useState(true);\r\n  const [userData, setUserData] = useState({});\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [rows, setRows] = useState(1);\r\n\r\n  const userid = localStorage.getItem(\"user\").replace(/\"/g, \"\"); //getting user info from the localstorage\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      console.log(userid)\r\n      const userInfo = await fetchUserData(userid);\r\n      setUserData(userInfo);\r\n    };\r\n\r\n    fetchUser();\r\n  }, []);\r\n\r\n  // since the author of every post will be the current user\r\n  const author = userData.username;\r\n  const authorProfile = userData.profilePicture;\r\n  const authorId = userid; \r\n  const articleData = {\r\n    title,\r\n    body,\r\n    author,\r\n    authorProfile,\r\n    description,\r\n    timeTakenToReadPost,\r\n    categories,\r\n    authorId,\r\n  };\r\n\r\n  // making text area responsive\r\n  const textareaLineHeight = 40; // Adjust this value based on your textarea's line-height\r\n  const handleHeadingChange = (e) => {\r\n    const previousRows = e.target.rows;\r\n    e.target.rows = 1; // Reset the number of rows to 1 for accurate scrollHeight\r\n    const currentRows = Math.floor(e.target.scrollHeight / textareaLineHeight);\r\n\r\n    if (currentRows === previousRows) {\r\n      e.target.rows = currentRows;\r\n    }\r\n\r\n    setRows(currentRows < 10 ? currentRows : 10);\r\n\r\n    setHeading(e.target.value);\r\n  };\r\n\r\n  const handleTimeTaken = (e) => {\r\n    settimeTakenToReadPost(e.target.value);\r\n  };\r\n\r\n  const handleDescChange = (e) => {\r\n    setDesc(e.target.value);\r\n  };\r\n\r\n  const handleCatChange = (e) => {\r\n      // const newObject = {\r\n      //   ...categories,// spread existing value\r\n      //   [e.target.value] : \"\" // add a new value that is not already in the categories\r\n      // }\r\n      // }\r\n      setcategories(e.target.value);\r\n  };\r\n  // const handleSave = () => {\r\n  //   navigate(\"/profile\");\r\n  // };\r\n\r\n  const openModal = useCallback(() => {\r\n    if (title && body) {\r\n      setIsModalOpen(true);\r\n    } else {\r\n      alert(\"Please check!! The Title or Body is Empty\");\r\n    }\r\n  }, [title, body]);\r\n\r\n  const handleReview = () => {\r\n    dispatch(preview({ body, title, isUpdate: articleUpdateData.isUpdate }));\r\n    if (reviewed) {\r\n      setReviewed(!reviewed);\r\n    } else {\r\n      setReviewed(!reviewed);\r\n    }\r\n  };\r\n\r\n  const handleCustomUndo = () => {\r\n    const quill = QuillRef.current.editor; // Get the Quill editor instance\r\n    quill.history.undo(); // Trigger the undo action\r\n  };\r\n\r\n  const handleCustomRedo = () => {\r\n    const quill = QuillRef.current.editor; // Get the Quill editor instance\r\n    quill.history.redo(); // Trigger the undo action\r\n  };\r\n\r\n  return (\r\n    <section className=\"writepage\">\r\n      <Topbar\r\n        publishClick={openModal}\r\n        showButton={true}\r\n        showText={true}\r\n        logoText={`Drafted by ${author}`}\r\n      />\r\n      <div className=\"writediv\">\r\n        <div id=\"toolbar\">\r\n          {/* {<button className=\"button-click \" onClick={handleSave}>Draft</button>} */}\r\n          {reviewed && (\r\n            <button className=\"button-click \" onClick={handleCustomRedo}>\r\n              redo\r\n            </button>\r\n          )}\r\n          {reviewed && (\r\n            <button className=\"button-click \" onClick={handleCustomUndo}>\r\n              undo\r\n            </button>\r\n          )}\r\n          <button className=\"button-click\" onClick={handleReview}>\r\n            {\" \"}\r\n            {reviewed ? \"Preview\" : \"back\"}\r\n          </button>\r\n        </div>\r\n        {reviewed ? (\r\n          <div className=\"Editor_container\">\r\n            <div className=\"article-write-header\">\r\n              <textarea\r\n                name=\"header\"\r\n                id=\"header\"\r\n                placeholder=\"Write your tittle\"\r\n                value={title}\r\n                rows={rows}\r\n                onChange={handleHeadingChange}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <ReactQuill\r\n              theme=\"snow\"\r\n              placeholder=\"Write your best...\"\r\n              modules={Writepage.modules}\r\n              onChange={setText}\r\n              value={body}\r\n              formats={Writepage.formats}\r\n              ref={QuillRef}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"preview\">\r\n            <div className=\"preview_head\">\r\n              <h1>{title}</h1>\r\n            </div>\r\n            <Articletext body={body} />\r\n          </div>\r\n        )}\r\n        {isModalOpen && (\r\n          <PublishModal\r\n            handleCatChange={handleCatChange}\r\n            handleDescChange={handleDescChange}\r\n            handleTimeTaken={handleTimeTaken}\r\n            onClose={() => setIsModalOpen(false)}\r\n            transfer1={articleData}\r\n            author={author}\r\n            transfer2={articleUpdateData}\r\n          />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nWritepage.modules = {\r\n  toolbar: [\r\n    [{ header: [1, 2, false] }],\r\n    [{ font: [] }],\r\n    [\"bold\", \"italic\", \"underline\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { align: [] },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    [\"link\", \"image\"],\r\n    [{ color: [] }, { background: [] }],\r\n    [\"clean\"],\r\n  ],\r\n  history: {\r\n    delay: 2000, // Optional delay in milliseconds (default is 1000ms or 1 second)\r\n    maxStack: 500, // Optional maximum undo/redo stack size (default is unlimited)\r\n    userOnly: true, // Optional, restricts undo/redo to changes made by the current user\r\n  },\r\n};\r\n\r\nWritepage.formats = [\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n  \"font\",\r\n  \"align\",\r\n  \"color\",\r\n  \"background\",\r\n  \"undo\",\r\n  \"redo\",\r\n];\r\nexport default Writepage;\r\n","import DOMpurify from \"dompurify\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./articletext.css\";\r\nimport { useSelector } from \"react-redux/es/hooks/useSelector\";\r\n\r\nfunction Articletext({body}) {\r\n  // const article = useSelector((state) => state.article.value);\r\n  //to presvent some security risks like xss and html injection, we are making use of dompurify to render purified html content\r\n  const sanitizedHTML = DOMpurify.sanitize(body);\r\n  return (\r\n    <div className=\"article_view_para ql-editor\" dangerouslySetInnerHTML={{ __html: sanitizedHTML }}></div>\r\n  )\r\n}\r\n\r\nexport default Articletext;","import React, { memo, useCallback, useEffect, useState } from \"react\";\r\nimport \"./topbar.css\";\r\nimport image1 from \"../../images/image1.png\";\r\nimport image2 from \"../../images/profilevactor.jpg\";\r\nimport { IoBookOutline } from \"react-icons/io5\";\r\n// import { IoIosNotifications } from \"react-icons/io\";\r\nimport {\r\n  TbLayoutSidebarLeftCollapseFilled,\r\n  TbLayoutSidebarLeftExpandFilled,\r\n} from \"react-icons/tb\";\r\nimport { FaSun } from \"react-icons/fa\";\r\nimport { FaMoon } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchUserData } from \"../../api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateTheme } from \"../../features/theme\";\r\n\r\nconst Topbar = memo((props) => {\r\n  const [userinfo, setUserInfo] = useState({});\r\n  const [dark, setdarkMode] = useState(false);\r\n\r\n  const dispach = useDispatch();\r\n  // css classes specification\r\n  const topbarClasses = [\r\n    \"topbar\",\r\n    props.showBottomBoxShadow ? \"bottom-box-shadow\" : \"\",\r\n  ].join(\" \");\r\n\r\n  const userid = localStorage.getItem(\"user\").replace(/\"/g, \"\"); //getting user info from the localstorage\r\n  // const user = JSON.parse(userString);\r\n  useEffect(() => {\r\n    const userDataFromBackend = async () => {\r\n      const ans = await fetchUserData(userid);\r\n      setUserInfo(ans);\r\n    };\r\n\r\n    userDataFromBackend();\r\n  }, []);\r\n\r\n  // taking care of changing themes\r\n\r\n  const handleBgChange = () => {\r\n    if (dark) {\r\n      dispach(updateTheme(dark));\r\n    } else {\r\n      dispach(updateTheme(dark));\r\n    }\r\n  };\r\n\r\n  const handleThemeClick = () => {\r\n    setdarkMode(!dark);\r\n    handleBgChange();\r\n  };\r\n\r\n  return (\r\n    <section className={topbarClasses}>\r\n      <div className=\"container\">\r\n        <div className=\"logo-1\">\r\n          <Link to=\"/dashboard\">\r\n            <img className=\"img1\" src={image1} alt=\"lancaster-logo\" />\r\n          </Link>\r\n          {props.showText ? (\r\n            <span className=\"logo-text\">{props.logoText}</span>\r\n          ) : (\r\n            <Link to=\"/dashboard\" className=\"home_link\">\r\n              <span className=\"logo-text other_small\">\r\n                Scholar<span className=\"colored_part\">Scribe</span>\r\n              </span>\r\n            </Link>\r\n          )}\r\n        </div>\r\n        <ul className=\"navbar\">\r\n          {props.showButton ? (\r\n            <li>\r\n              <button\r\n                className=\"publish-button hvr-wobble-top\"\r\n                onClick={props.publishClick}\r\n              >\r\n                Publish\r\n              </button>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/writepage\" className=\"write\">\r\n                <IoBookOutline className=\"write_icon\" />\r\n                <span className=\"write_link hvr-wobble-top\">Write</span>\r\n              </Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            {/* <div className=\"notification\">\r\n              <IoIosNotifications className=\"notification-icon hvr-pulse-shrink\" />\r\n              <span>5</span>\r\n            </div> */}\r\n            <div className=\"bg__change\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"checkbox\"\r\n                className=\"checkbox\"\r\n                onClick={handleThemeClick}\r\n              />\r\n              <label for=\"checkbox\" className=\"checkbox__label\">\r\n                <FaMoon className=\"fa-moon\" />\r\n                <FaSun className=\"fa-sun\" />\r\n                <span className=\"check__ball\" onClick={handleThemeClick}></span>\r\n              </label>\r\n            </div>\r\n          </li>\r\n          {!props.profile ? (\r\n            <li>\r\n              <Link to={`/profile/${userid}`}>\r\n                {!userinfo.profilePicture ? (\r\n                  <img className=\"img4\" src={image2} alt=\"\" />\r\n                ) : (\r\n                  <img\r\n                    className=\"img4\"\r\n                    src={userinfo.profilePicture}\r\n                    alt=\"\"\r\n                  />\r\n                )}\r\n              </Link>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/\">\r\n                <button\r\n                  className=\"publish-button hvr-wobble-top\"\r\n                  onClick={props.logoutClick}\r\n                >\r\n                  Logout\r\n                </button>\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n      {!props.sidebar\r\n        ? props.showBottomBoxShadow && (\r\n            <TbLayoutSidebarLeftExpandFilled\r\n              className=\"topbar_panel\"\r\n              onClick={props.sideBarHandle}\r\n            />\r\n          )\r\n        : props.showBottomBoxShadow && (\r\n            <TbLayoutSidebarLeftCollapseFilled\r\n              className=\"topbar_panel\"\r\n              onClick={props.sideBarHandle}\r\n            />\r\n          )}\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default Topbar;\r\n"],"names":["props","descPhoto","setPhoto","useState","load","setLoad","isPhotoSelected","setIsPhotoSelected","title","body","author","authorProfile","description","timeTakenToReadPost","categories","authorId","transfer1","formData","comments","likes","_jsxs","className","children","_jsx","Loading","onClick","onClose","GiCancel","onSubmit","async","e","preventDefault","transfer2","isUpdate","updateArticle","id","alert","sendPostData","value","onChange","handleDescChange","required","placeholder","handleCatChange","handleTimeTaken","type","name","accept","selectedPhoto","target","files","src","URL","createObjectURL","alt","Writepage","articleUpdateData","useSelector","state","article","QuillRef","useRef","dispatch","useDispatch","setHeading","setDesc","setText","settimeTakenToReadPost","setcategories","reviewed","setReviewed","userData","setUserData","isModalOpen","setIsModalOpen","rows","setRows","userid","localStorage","getItem","replace","useEffect","console","log","userInfo","fetchUserData","fetchUser","username","profilePicture","articleData","openModal","useCallback","Topbar","publishClick","showButton","showText","logoText","concat","handleCustomRedo","current","editor","history","redo","handleCustomUndo","undo","handleReview","preview","previousRows","currentRows","Math","floor","scrollHeight","ReactQuill","theme","modules","formats","ref","Articletext","PublishModal","toolbar","header","font","list","align","indent","color","background","delay","maxStack","userOnly","_ref","sanitizedHTML","DOMpurify","dangerouslySetInnerHTML","__html","memo","userinfo","setUserInfo","dark","setdarkMode","dispach","topbarClasses","showBottomBoxShadow","join","ans","userDataFromBackend","handleThemeClick","updateTheme","Link","to","image1","IoBookOutline","for","FaMoon","FaSun","profile","logoutClick","image2","sidebar","TbLayoutSidebarLeftCollapseFilled","sideBarHandle","TbLayoutSidebarLeftExpandFilled"],"sourceRoot":""}