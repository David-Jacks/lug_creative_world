// making use of firebase to process data
import {createUserWithEmailAndPassword, signInWithEmailAndPassword} from "firebase/auth"
import { collection, addDoc, getDocs, setDoc, doc, getDoc } from "firebase/firestore";
import { db, auth, storage } from "./firebaseconfig";
import { getDownloadURL, ref, uploadBytes } from "firebase/storage";

// login
export const UserLogin = async (data) => {
  try {
    const response = await signInWithEmailAndPassword(auth, data.userEmail, data.password);;
    
    return response;
  } catch (error) {
    throw error;
  }
};

// signing up
export const join = async (data) => {
  try {
    // authenticating with the 
    // email and the password of the user
    // and after store the user info in my database
    const response = await createUserWithEmailAndPassword(auth, data.email, data.password);
    // storing the id that is generated by firbase as part of the users data
    const user = response.user
    const userId = user.uid; // getting the uid of the user
    await setDoc(doc(db, "users", userId), data);
    window.location.href = "/loginpage";
    // change to the login page after the user has been sucessfully added
  } catch (error) {
    throw error
  }
};
// getting information about a  user
export const fetchUserData = async (id) => {
  try {
    // referencing the user you want to get the info about using the id
    const docRef = doc(db, "users", id);
    const response = await getDoc(docRef);
    if (response.exists())
      return (response.data());
    else{
      console.log("there is no such user");
      return {}
    }
  } catch (error) {
    throw error;
  }
};

// creating a post
// sending the desc photo to storage and getting back the url
async function uploadImage(file, imgName)
{
  try{

    const storageRef = ref(storage, `posts/${imgName}`)
    const imgRes = await uploadBytes(storageRef, file);
    // getting the download url from imgRes
    const imgUrl = await getDownloadURL(imgRes.ref);
    return imgUrl;
  }catch(err){
    throw err
  } 
}
export const sendPostData = async (data) => {
  try {
    const imgFile = data.descPhoto
    const imgName = imgFile.name;
    
    const imgUrl = await uploadImage(imgFile, imgName);
    // reasigning the descPhoto
    data.descPhoto = imgUrl;
    const response = await addDoc(collection(db, "posts"), data);
    return response
  } catch (error) {
    throw error
  }
};

// loging out
export const Logout = async () => {
  // try {
  //   const response = await Axios.post("/api/auths/logout");
  //   if (response.status === 200) {
  //     window.location.href = "/";
  //   } else {
  //     console.log(response);
  //   }
  // } catch (error) {
  //   throw error;
  // }
};


export const fetchPostData = async() =>{
    // try {
    //     const response = await Axios.get("/api/posts");
    //     return response.data;
    // } catch (error) {
    //     throw error;
    // }
}

// implementing pagination when getting post
// export const fetchPostData = async (offset) => {
  // try {
  //   const response = await Axios.get(`/api/posts?offset=${offset}`);
  //   return response.data;
  // } catch (error) {
  //   throw error;
  // }
// };

export const fetchuserArticles = async (id) => {
  // try {
  //   const response = await Axios.get(`/api/posts/user/${id}`);
  //   return response.data;
  // } catch (error) {
  //   throw error;
  // }
};


export const getCat = async () => {
  // try {
  //   const response = await Axios.get("/api/categories");
  //   return response.data;
  // } catch (error) {
  //   throw error;
  // }
};

export const getToppost = async () => {
  // try {
  //   const response = await Axios.get("/api/post/likes/top-liked");
  //   return response.data;
  // } catch (error) {
  //   throw error;
  // }
};

// getting top authors
export const getTopAuthors = async () => {
  // try {
  //   const res = await Axios.get("/api/post/likes/topauthors/top-liked-authors");
  //   return res.data;
  // } catch (error) {
  //   throw error;
  // }
};

export const deleteArticle = async (id) => {
//   const token = localStorage.getItem("token");

//   const config = {
//     headers: {
//       Authorization: `Bearer ${token}`,
//     },
//   };

//   try {
//     const response = await Axios.delete(`/api/posts/${id}`, config);
//     if (response.status === 200) {
//       window.location.reload();
//     }
//   } catch (error) {
//     throw error;
//   }
};

export const updateArticle = async (id, data) => {
//   try {
//     const response = await Axios.put(`/api/posts/${id}`, data);
//     if (response.status === 200) {
//       window.location.href = "/dashboard";
//     } else {
//       console.log(response);
//     }
//   } catch (error) {
//     throw error;
//   }
};

export const saveArticle = async (id) => {
//   try {
//     const response = await Axios.post(`/api/article/save-article/${id}`);
//     if (response.status === 200) {
//       window.location.reload();
//     } else {
//       console.log(response);
//     }
//   } catch (error) {
//     throw error;
//   }
};

//dealing with images

export const uploadProfileImage = async (file) => {
//   try {
//     const formData = new FormData();
//     formData.append("file", file);
//     const res = await Axios.post(
//       "/api/profile/upload-profile-picture",
//       formData
//     );
//     return res.data;
//   } catch (err) {
//     console.log(err);
//   }
};

export const uploadArticleImage = async(file) =>{
// try {
//     const formData = new FormData();
//     formData.append("file", file);
//     const res = await axios.post("/api/profile/", formData);
//     return res.data;
// } catch (err) {
//     console.log(err);
// }
};

export const profileUpdate = async (data) => {
//   try {
//     const res = await Axios.post("/api/profile/upload-profile-picture", data);
//     console.log("res...", res);
//   } catch (err) {
//     throw err;
//   }
};

// dealing with likes

export const handleLikeClick = async (id) => {
//   try {
//     const res = await Axios.post(`/api/post/likes/${id}`);
//     return res.data;
//   } catch (err) {
//     throw err;
//   }
};

export const getLikes = async (id) => {
//   try {
//     const response = await Axios.get(`/api/post/likes/${id}`);
//     return response.data;
//   } catch (error) {
//     throw error;
//   }
};
// dealing with comments

export const postComment = async (id, body) => {
//   try {
//     const res = await Axios.post(`/api/posts/${id}/comments`, body);
//     return res.data;
//   } catch (error) {
//     throw error;
//   }
};

export const getComments = async (id) => {
//   try {
//     const res = await Axios.get(`/api/posts/${id}/comments`);
//     return res.data;
//   } catch (error) {
//     throw error;
//   }
};

export const delComment = async (id, commentid) => {
//   try {
//     const res = await Axios.delete(`/api/posts/${id}/comments/${commentid}`);
//     return res.status;
//   } catch (error) {
//     throw error;
//   }
};

// dealing with searching

export const getArticleByCat = async (query) => {
//   try {
//     const res = await Axios.get(`/api/categories/${query}`);
//     return res.data;
//   } catch (error) {
//     throw error;
//   }
};

export const getArticleByTitle = async (query) => {
//   try {
//     const res = await Axios.get(`/api/posts/search?q=${query}`);
//     return res.data;
//   } catch (error) {
//     throw error;
//   }
};
